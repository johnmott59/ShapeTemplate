This directory contains a T4 text template that can be used to generate a wireframe of a Meshola template that will be run by the engine.

Please note! Using the API does not require a template. The API expects XML as input, but that XML can be created with a text editor.
The templates are nothing more than a way to wrap generation of the XML and provide properties and methods to guide its generation.

The templates in this DLL are run by the engine, and so they have a particular design because they are called by the 
engine to do certain kinds of processing. Not all of the entry points are required if you are designing a new template outside 
of the DLL.

Conceptually a template is nothing more than a set of properties and an implementation of a Compile() entry point, which will return
an XElement struct that is ready to be sent to the API. The properties are the knobs and dials that control the meshes that you want
to generate.

To use this T4 template take note of this class in the .tt document. A list of these define the properties of the template, and the
T4 processing will generate the wireframe code to manage these properties. The Compile() entry point is where the heavy lifting is 
done, that's where you generate the XML. 

/*
 * This class contains the information we need to generate each property of the class.
 * Its defined here because of the way templates work, this will be generated as part of the class generated by the template
 */
public class TemplateProperty {
	public string PropertyName	{get;set;}
	public string PropertyType	{get;set;}
	public string XMLPosition	{get;set;}
	public bool PropertyNode	{get;set;}
}